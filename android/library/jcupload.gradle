apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
//apply plugin: 'bintray-release'

// 这个version是区分library版本的，因此当我们需要更新library时记得修改这个version
// 这个version影响后面的引用
version = PROJ_VERSION
//
//android {
//
//    resourcePrefix "cc_" //随意填写
//
//    compileSdkVersion 22
//    buildToolsVersion "22.0.1"
//
//    defaultConfig {
//        minSdkVersion 9
//        targetSdkVersion 22
//        versionCode 2
//        versionName "1.1"
//    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
//}
//
//dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    testCompile 'junit:junit:4.12'
//    compile 'com.android.support:appcompat-v7:22.2.0'
//    compile 'com.android.support:recyclerview-v7:22.2.0'
//
//}

def siteUrl = 'https://www.appadhoc.com/'   // 项目的主页
def gitUrl = 'git@github.com:AppAdhoc/AdhocSDK-Android.git'   // Git仓库的url
group = PROJ_GROUP            // Maven Group ID for the artifact，一般填你唯一的包名
install {
    repositories.mavenInstaller {
//        pom.artifactId = artifactIdStr
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'AppAdhoc A/BTest WeexSDK'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'appadhoc'      //填写的一些基本信息
                        name '北京吆喝科技'
                        email 'jiaozhengxiang@appadhoc.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
    exclude '**/**'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/**'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    exclude '**/**'
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = PROJ_ARTIFACTID   //发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}